{"version":3,"sources":["img/instructions.png","Components/Loading.js","Components/Month.js","Components/Header.js","Components/Song.js","Components/Months.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","textArray","Loading","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","textIdx","timeoutTries","_this2","timeout","setInterval","currentIdx","currentTimeout","setState","clearInterval","textThatChanges","react_default","a","createElement","className","Component","Month","_ref","month","url","pathurl","react_router_dom","to","src","alt","Header","pathname","useLocation","slice","toUpperCase","Song","_useState","useState","_useState2","slicedToArray","top15","setTop15","_useState3","_useState4","bot15","setBot15","useEffect","asyncToGenerator","_regeneratorRuntime","mark","_callee","allSongs","wrap","_context","prev","next","fetchMonth","sent","sortPlace","stop","apply","arguments","getMonth","_ref2","_callee2","res","_context2","window","location","axios","get","concat","abrupt","data","toptemp","bottemp","i","push","colors","randomIndex","colorArray","currentIndex","length","Math","floor","random","_ref3","backgroundColor","document","body","style","backgroundImage","map","objects","index","key","artist","title","Months","tops","setTops","Months_regeneratorRuntime","topSongs","fetchTops","getTops","Components_Header","keys","react_router","exact","path","element","object","Components_Month","Components_Song","App","len","setLen","jsons","setJsons","_useState5","_useState6","load","setLoad","_useState7","_useState8","show","setShow","el","getElementById","getJSON","_x","_getJSON","App_regeneratorRuntime","response","fetch","ok","Error","statusText","json","_fetchJSON","links","then","toConsumableArray","_getTops","_callee3","_context3","_fetchTops","_callee4","_context4","post","addEventListener","e","button_el","detail","id","classList","remove","add","temp","files","_x2","fetchJSON","preventNavigation","setTimeout","Components_Loading","Components_Months","href","instructions","ReactDOM","createRoot","render","src_App"],"mappings":"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","file":"static/js/main.cd0040b4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/instructions.c1286b23.png\";","import React, { Component } from \"react\";\n\nconst textArray = ['Gathering your data...', 'Reading your data...', 'Sorting your data...', 'Ranking your data...', 'Hey, you have pretty good taste in music...', 'Getting album covers...', 'Finalizing your results...', 'Loading your songs...','**Clinking and clanking noises..**', 'Almost done...']\n\nclass Loading extends Component {\n  constructor() {\n    super();\n    this.state = { textIdx: 0, timeoutTries: 0};\n  }\n\n  //set timer for text array \n  componentDidMount() {\n    this.timeout = setInterval(() => {\n      let currentIdx = this.state.textIdx;\n      let currentTimeout = this.state.timeoutTries;\n      if (currentIdx + 1 < 10){\n        this.setState({ textIdx: currentIdx + 1, timeoutTries: 0 });\n      }\n      else{\n        this.setState({ textIdx: 9, timeoutTries: currentTimeout + 1 }); //after all text in array appear, only show the last element\n      }\n      if (currentTimeout > 7){\n        clearInterval(this.timeout); //if last element appears, stop timer, show error\n      }\n    }, 8000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timeout);\n  }\n\n  render() {\n    let textThatChanges = textArray[this.state.textIdx];\n    let timeout = this.state.timeoutTries\n    return (\n      <div>\n        {timeout < 7 ? (<h2 className=\"loading\">{textThatChanges}</h2>) :\n        (<h2 className=\"error\"> Something went wrong. Refresh and try again.</h2>)}\n      </div>\n    )\n  }\n  \n}\n\nexport default Loading\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\n\n//Creates new page linked by image on home page\nfunction Month({month, url}) {\n    let pathurl = \"/month/\"+month //new page path name is name of month of top song\n    return (\n        <div className = \"month\">\n        <p className = \"textmonth\"> {month} </p>\n        <NavLink to={pathurl}><img src = {url} alt = \"Most listened to artist for this month\"></img></NavLink>\n        </div>\n    )\n}\n\nexport default Month\n","import React from 'react'\nimport { useLocation } from 'react-router-dom';\nimport { NavLink } from 'react-router-dom'\n\n//Create Header based on pathname\nfunction Header() {\n  let month;\n  const { pathname } = useLocation();\n  if (pathname === '/'){ //Home  page Header\n    month = \"Each Month\"\n    return(\n      <h1 className='head'> Check Out Your Top Songs For {month}</h1>\n    )\n  }\n  else {\n    month = pathname.slice(7).toUpperCase()  //All other headers includes Month name\n    return(\n    <div>\n      <NavLink to={\"/\"}><img className = 'icon' src = {\"https://cdn2.iconfinder.com/data/icons/arrows-1-2/416/Arrow_Left3-512.png\"} alt = \"Most listened to artist for this month\"></img></NavLink> \n      <h1 className='head'> Check Out Your Top Songs For {month}</h1>\n    </div>\n    )\n  }\n\n}\n\nexport default Header\n","import axios from 'axios';\nimport React from 'react'\nimport { useState, useEffect } from 'react'\n\nfunction Song() {\n  const [top15, setTop15] = useState([]) //top 15\n  const [bot15, setBot15] = useState([]) //bottom 15\n\n  //immediately get songs in given month and place in relevant ^^^ array\n  useEffect(() => {\n    const getMonth = async () => {\n      const allSongs = await fetchMonth()\n      sortPlace(allSongs)\n    }\n    getMonth()\n  }, [])\n\n\n  //fetch song per month  \n  const fetchMonth = async () => {\n    let month = window.location.pathname\n    month = month.slice(6)\n    const res = await axios.get(`${month}/`) \n    return res.data\n  }\n\n  //place song info in either top15 array or bottom15 array\n  const sortPlace = (allSongs) => {\n    let toptemp = []\n    let bottemp = []\n\n    for(let i in allSongs){\n      if (allSongs[i][\"place\"] === \"top\") {\n        toptemp.push(allSongs[i])\n      }\n      else if (allSongs[i][\"place\"] === \"bot\") {\n        bottemp.push(allSongs[i])\n      }\n    }\n    setTop15(toptemp)\n    setBot15(bottemp)\n  }\n\n  //returns random background color for page\n  const backgroundColor = () => {\n    let colorArray = [\"#C724B1\", \"#4D4DFF\", \"#E0E722\", \"#D22730\", \"#DB3EB1\", \"#44D62C\"]\n    let currentIndex = colorArray.length,  randomIndex;\n  \n  // Coolaj86 - stackoverflow shuffle algo \n\n    // While there remain elements to shuffle.\n    while (currentIndex !== 0) {\n  \n      // Pick a remaining element.\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex--;\n  \n      // And swap it with the current element.\n      [colorArray[currentIndex], colorArray[randomIndex]] = [\n        colorArray[randomIndex], colorArray[currentIndex]];\n    }\n    return [colorArray[0], colorArray[1]]\n  }\n\n  let colors = backgroundColor()\n  return (\n    //set background color to random gradient\n    document.body.style.backgroundColor = colors[1],\n    document.body.style.backgroundImage = \"linear-gradient(\"+ colors[0] +\", \"+ colors[1] +\")\",\n   \n    //display top15 & bottom15 as scroll w/ text trigger when image hovered\n    <div>  \n      <h2 className=\"rank\">Top 15</h2>\n      <section className='container'>\n        <ul className='top15' >\n        {top15.map((objects, index) => {\n          return (\n              <li key = {index} className= \"wrap\">\n                <img src = {objects.url} alt = {objects.artist} ></img>\n                <p className=\"info\">\n                <p className='title' >{objects.title} </p> \n                <p className='artist'> {objects.artist}</p>\n                </p>              \n              </li>\n          );\n        })}\n        </ul>\n      </section>\n      \n      <h2 className=\"rank\">Bottom 15</h2>\n      <section className='container'>\n        <ul className='bot15'>\n        {bot15.map((objects, index) => {\n          return (\n              <li key = {index} className=\"wrap\">\n                <img src = {objects.url} alt = {objects.artist} ></img>\n                <p className=\"info\">\n                <p className='title' >{objects.title} </p> \n                <p className='artist'> {objects.artist}</p>\n                </p>\n              </li>\n          );\n        })}\n        </ul>\n      </section>\n    </div>\n   \n  )\n}\n\nexport default Song\n","import React from 'react'\nimport { useState, useEffect } from 'react'\nimport { BrowserRouter as Router, Route, Routes} from 'react-router-dom'\nimport axios from 'axios';\nimport Month from './Month';\nimport Header from './Header';\nimport Song from './Song';\n\n\nfunction Months() {\n  const [tops, setTops] = useState([]) //top songs for each month\n\n  // get all the top songs for each month to display pics\n  useEffect(() => {\n    const getTops = async () => {\n      const topSongs = await fetchTops()\n      setTops(topSongs)\n    }\n    getTops()\n\n  }, [])\n\n  //fetch top songs\n  const fetchTops = async () => {\n    const res = await axios.get('/year/')\n    return res.data\n  }\n\n  return(\n    <Router>\n    <div>\n      <Header/>\n\n      {Object.keys(tops).length !== 0 ? (\n      <Routes>\n        {/* Route all month tiles on home page to own subpage */}\n          <Route\n            exact path = '/'\n            element={\n              <ul className=\"pmonth\">\n                 {tops.map((object, index) => { //get top songs from array populated by getTops\n                  return (\n                    <Month key ={index} month={object.month}  url = {object.url} /> //Month component creates new page with month name as path\n                  );\n                })}\n              </ul>\n            }\n            />\n           <Route path=\"/month/:month\" element={<Song />} /> {/*Every page except home and Months page will use Song component structure */}\n      </Routes>\n      ) : (<h3 >No data from the past year available. Try uploading more recent data. </h3>) //msg for no data\n    }\n\n    </div>\n    </Router>\n  )\n}\n\nexport default Months;\n","import React, { useEffect, useState } from \"react\";\nimport './index.css';\nimport Loading from \"./Components/Loading\";\nimport Months from \"./Components/Months\";\nimport instructions from \"./img/instructions.png\";\nimport axios from \"axios\";\n\nfunction App() {\n  const [len, setLen] = useState(0)\n  const [jsons, setJsons] = useState([])\n  const [load, setLoad] = useState(false)\n  const [show, setShow] = useState(false)\n  \n  const el = document.getElementById(\"user_avatar_url\")\n  \n  //customize button\n  el.addEventListener(\"buttonCreated\", function(e){\n    let button_el = document.getElementById(`${e.detail.id}`);\n    button_el.classList.remove('btn,btn-primary');\n    button_el.classList.add('upload');\n  })\n\n  el.addEventListener(\"fileUploadSuccess\", function (e) {\n    var temp = []\n    var files = e.detail.files\n    for(var i in files){\n      temp.push(files[i]['cdnUrl'])\n    }\n    setLen(temp.length)\n    fetchJSON(temp) //converts to  json from links from ^^^\n    setLoad(true) //Loading component\n\n  })\n  //watch json length change to trigger fetch request\n  useEffect(() => {\n    if (jsons.length > 0 && jsons.length === len){\n      getTops()\n    }\n  }, [jsons])\n\n  //watch for reload to trigger return to 'upload files' page\n  useEffect(() => {\n    (function () {\n      var location = window.document.location;\n  \n      var preventNavigation = function () {\n          var originalPathName = '/';\n  \n          window.setTimeout(function () {\n              location.pathname = 'preventNavigation' + ~~ (9999 * Math.random());\n              location.pathname= originalPathName;\n          }, 0);\n      };\n  \n      window.addEventListener('beforeunload', preventNavigation, false);\n      window.addEventListener('unload', preventNavigation, false);\n    })();\n\n  }, [])\n\n\n  async function getJSON(url) {\n    const response = await fetch(url);\n    if(!response.ok) \n      throw new Error(response.statusText);\n  \n    const data = response.json(); \n    return data; \n  }\n  \n  //gets links and turns to json\n  async function fetchJSON(links) {\n    for(var i in links){\n      getJSON(links[i])\n      .then(data => {\n        setJsons(jsons => ([...jsons, data]))})\n    }\n  }\n  async function getTops() {\n    const topSongs = await fetchTops()\n    setShow(true)\n    return topSongs\n  }\n\n  async function fetchTops() {\n    const res = await axios.post('/year/', jsons) \n    return res\n  }\n  \n  if(load && !show && jsons.length > 0){\n    return (\n      <div>\n        <Loading />\n      </div>\n    )\n  }\n  if(show && jsons.length > 0){\n    return (\n      <div>\n          <Months />\n      </div>\n    )\n  }\n  if(load && !show && len === 0){\n    return(\n      <div>\n        <p className=\"error\">Must submit at least one file. Refresh and try again.</p>\n      </div>\n    )\n  }\n  if(!load && !show && jsons.length === 0){\n    return(\n      <div>\n        <div>\n          <h1 className=\"welc\">Welcome to Your Spotify Monthly Wrapped</h1>\n        </div>\n        <div>\n        <ol className=\"instruct\">\n          <li>Download your Spotify streaming data from the Privacy settings page of your Spotify account</li>\n          <li>Upload the JSON files below (Usually titled \"StreamingHistory\")</li>\n          <li>Sit back and enjoy!</li>\n          </ol>\n        </div>\n        <div>\n          <p className=\"where\">\n          <a href = {instructions} title='Upload your unzipped json files below. They are usually titled \"StreamingHistory\"'>Where can I find my Data?</a>\n          </p>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  // <React.StrictMode> \n    <App />\n  // </React.StrictMode>\n);\n\n\n"],"sourceRoot":""}